var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
import { Component } from '@angular/core';
import { ToastService } from './services/toast.service';
var ToastComponent = (function () {
    function ToastComponent(toastService) {
        this.toastService = toastService;
        this.title = 'ngx-toast';
    }
    ToastComponent.prototype.showSuccessToast = function () {
        var param = {
            msg: 'success',
            position: this.toastService.position.top_right,
            timeout: 1000
        };
        this.toastService.showSuccessToast(param);
    };
    ToastComponent.prototype.showInfoToast = function () {
        var param = {
            msg: 'info',
            position: this.toastService.position.top_center,
            timeout: 2000
        };
        this.toastService.showInfoToast(param);
    };
    ToastComponent.prototype.showWarningToast = function () {
        var param = {
            msg: 'warning',
            position: this.toastService.position.bottom_left,
            timeout: 3000
        };
        this.toastService.showWarningToast(param);
    };
    ToastComponent.prototype.showErrorToast = function () {
        var param = {
            msg: 'error',
            position: this.toastService.position.bottom_center,
            timeout: 4000
        };
        this.toastService.showErrorToast(param);
    };
    ToastComponent = __decorate([
        Component({
            selector: 'app-root',
            templateUrl: './toast.component.html',
            styleUrls: ['./toast.component.scss']
        }),
        __metadata("design:paramtypes", [ToastService])
    ], ToastComponent);
    return ToastComponent;
}());
export { ToastComponent };
//# sourceMappingURL=toast.component.js.map